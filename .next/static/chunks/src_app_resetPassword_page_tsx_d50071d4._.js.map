{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://H%3A/REACT-JS/Dating/src/app/resetPassword/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { Eye, EyeOff } from \"lucide-react\";\r\n\r\nexport default function ResetPassword() {\r\n  const totalSteps = 5;\r\n  const [step, setStep] = useState(1);\r\n  const [selectedContact, setSelectedContact] = useState<string | null>(null);\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\"); // —è–∫—â–æ —Ö–æ—á–µ—à –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω\r\n\r\n  // —Å—Ç–∞–Ω–∏ –≤–≤–µ–¥–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö\r\n  const [emailOrPhone, setEmailOrPhone] = useState(\"\");\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n\r\n  // üîπ –¥–æ–¥–∞–Ω–æ —Å—Ç–∞–Ω –¥–ª—è 6-–∑–Ω–∞—á–Ω–æ–≥–æ –∫–æ–¥—É\r\n  const [recoveryCode, setRecoveryCode] = useState<string[]>(Array(6).fill(\"\"));\r\n\r\n  // --- –∞–≤—Ç–æ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ localStorage ---\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem(\"resetPasswordData\");\r\n    if (stored) {\r\n      const parsed = JSON.parse(stored);\r\n      setEmailOrPhone(parsed.emailOrPhone || \"\");\r\n      setVerificationCode(parsed.verificationCode || \"\");\r\n      setNewPassword(parsed.newPassword || \"\");\r\n      setConfirmPassword(parsed.confirmPassword || \"\");\r\n    }\r\n  }, []);\r\n\r\n  // --- –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö ---\r\n  const saveData = () => {\r\n    const allData = {\r\n      emailOrPhone,\r\n      verificationCode,\r\n      newPassword,\r\n      confirmPassword,\r\n    };\r\n    localStorage.setItem(\"resetPasswordData\", JSON.stringify(allData));\r\n  };\r\n\r\n  const nextStep = () => {\r\n    saveData();\r\n    setStep((prev) => Math.min(prev + 1, totalSteps));\r\n  };\r\n\r\n  const prevStep = () => {\r\n    saveData();\r\n    setStep((prev) => Math.max(prev - 1, 1));\r\n  };\r\n\r\n  return (\r\n    <section className=\"grid grid-rows-[0px_1fr_20px] items-center justify-items-center min-h-screen sm:pt-[64px] pt-[30px] gap-16 font-[family-name:var(--font-geist-sans)]\">\r\n      {/* –õ–æ–≥–æ—Ç–∏–ø –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –Ω–∞ –≥–æ–ª–æ–≤–Ω—É */}\r\n      <Link href=\"/\">\r\n        <Image src=\"/Logo.svg\" alt=\"Dating logo\" width={48} height={88} />\r\n      </Link>\r\n\r\n      <div className=\"max-w-[596px] mx-auto sm:p-[48px] px-4 sm:bg-[#F9F9F9] sm:shadow-[0px_2px_8px_0px_#0000001F] rounded-lg w-full flex flex-col gap-6 \">\r\n        {/* --- Step 1: Welcome Back --- */}\r\n        {step === 1 && (\r\n          <div className=\"\">\r\n            <div className=\"flex flex-col gap-4 text-center sm:mb-4 mb-48\">\r\n              <h2 className=\"text-[24px] font-semibold\">Welcome Back!</h2>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Email or Phone\"\r\n                value={emailOrPhone}\r\n                onChange={(e) => setEmailOrPhone(e.target.value)}\r\n                className=\"border rounded-[8px] placeholder-black placeholder-opacity-10 bg-[#fff] px-[12px] py-[9px] h-[40px] w-full focus:outline-none\r\n                border-[#D9D9D9]\"\r\n              />\r\n              <div className=\"relative w-full\">\r\n                <input\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  placeholder=\"New Password\"\r\n                  value={newPassword}\r\n                  onChange={(e) => setNewPassword(e.target.value)}\r\n                  className=\"border rounded-[8px] bg-[#fff] bg-[#fff] px-[12px] py-[9px] h-[40px] w-full focus:outline-none\r\n                border-[#D9D9D9]\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-500 hover:text-black focus:outline-none \">\r\n                  {showPassword ? (\r\n                    <Eye size={16} className=\"text-[#8C8C8C]\" />\r\n                  ) : (\r\n                    <EyeOff\r\n                      size={16}\r\n                      className=\"transform -scale-x-100 text-[#8C8C8C]\"\r\n                    />\r\n                  )}\r\n                </button>\r\n              </div>\r\n              <div className=\"text-left\">\r\n                <a href=\"\" className=\"\">\r\n                  Forgot password?\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={nextStep}\r\n              className=\"bg-[#1677FF] hover:bg-[#2b7ff5] text-[#fff] rounded-[10px] text-base py-[9px] px-[16px] w-full leading-6 h-10\">\r\n              Log In\r\n              <span className=\"transition-transform duration-200  group-hover:translate-x-1 pl-2 tex-[20px] font-bold\">\r\n                -&gt;\r\n              </span>\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* --- Step 2: Email/Phone --- */}\r\n        {step === 2 && (\r\n          <div className=\"flex flex-col gap-4\">\r\n            <h2 className=\"text-[24px] font-semibold text-center\">\r\n              Forgot password?\r\n            </h2>\r\n            <p className=\"text-base font-normal text-center text-[#000000A3] leading-6 \">\r\n              Provide your account‚Äôs email for which you want to restore\r\n              password!\r\n            </p>\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              value={emailOrPhone}\r\n              onChange={(e) => setEmailOrPhone(e.target.value)}\r\n              className=\"border bg-[#fff] p-2 rounded w-full sm:mb-8 mb-40\"\r\n            />\r\n            <button\r\n              onClick={nextStep}\r\n              className=\"bg-[#1677FF] hover:bg-[#2b7ff5] text-[#fff] rounded-[10px] text-base py-[9px] px-[16px] w-full leading-6 h-10\">\r\n              Send code\r\n              <span className=\"transition-transform duration-200  group-hover:translate-x-1 pl-2 tex-[20px] font-bold\">\r\n                -&gt;\r\n              </span>\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {step === 3 && (\r\n          <div className=\"flex flex-col gap-6 text-center\">\r\n            <h2 className=\"text-[24px] font-semibold\">Make selection</h2>\r\n            <p className=\"text-base font-normal text-black/60 leading-6 text-[#000000A3]\">\r\n              Select which contact detail we should use to reset your password.\r\n            </p>\r\n\r\n            <div className=\"flex flex-col gap-4 sm:mb-2 mb-36\">\r\n              {/* Email card */}\r\n              <button\r\n                onClick={() => setSelectedContact(emailOrPhone)}\r\n                className={`flex items-center gap-4 p-4 border rounded-lg w-full text-left hover:bg-blue-50 transition ${\r\n                  selectedContact === emailOrPhone\r\n                    ? \"bg-blue-50 border-blue-400\"\r\n                    : \"bg-white border-gray-200\"\r\n                }`}>\r\n                <span className=\"text-gray-400\">\r\n                  <Image src=\"/Mail.svg\" alt=\"mail\" width={36} height={36} />\r\n                </span>\r\n                <div className=\"flex flex-col text-left\">\r\n                  <span className=\"text-gray-500 text-sm\">via mail:</span>\r\n                  <span className=\"font-semibold\">{emailOrPhone}</span>\r\n                </div>\r\n              </button>\r\n\r\n              {/* Phone card */}\r\n              <button\r\n                onClick={() => setSelectedContact(phoneNumber)}\r\n                className={`flex items-center gap-4 p-4 border rounded-lg w-full text-left hover:bg-blue-50 transition ${\r\n                  selectedContact === phoneNumber\r\n                    ? \"bg-blue-50 border-blue-400\"\r\n                    : \"bg-white border-gray-200\"\r\n                }`}>\r\n                <span className=\"text-gray-400\">\r\n                  <Image\r\n                    src=\"/Mobile.svg\"\r\n                    alt=\"mobile\"\r\n                    width={36}\r\n                    height={36}\r\n                  />\r\n                </span>\r\n                <div className=\"flex flex-col text-left\">\r\n                  <span className=\"text-gray-500 text-sm\">via sms:</span>\r\n                  <span className=\"font-semibold\">{phoneNumber}</span>\r\n                </div>\r\n              </button>\r\n            </div>\r\n\r\n            <button\r\n              onClick={nextStep}\r\n              className=\"mt-4 bg-[#1677FF] text-[#fff] hover:bg-[#2b7ff5] text-white rounded-lg py-2 px-4 w-full\">\r\n              Next &rarr;\r\n            </button>\r\n\r\n            {/* Cancel */}\r\n            <button onClick={prevStep} className=\"mt-2 text-gray-500 underline\">\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* --- Step 4: Recovery Code --- */}\r\n        {step === 4 && (\r\n          <div className=\"flex flex-col gap-4\">\r\n            <h2 className=\"text-[24px] font-semibold text-center\">\r\n              Enter 6-digit recovery code\r\n            </h2>\r\n            <p className=\"text-base font-normal text-center text-[#000000A3] leading-6\">\r\n              The recovery code was sent to {emailOrPhone}. Please enter the\r\n              code.\r\n              <a\r\n                href=\"#\"\r\n                className=\"underline decoration-black decoration-2 underline-offset-4 hover:decoration-[#1677FF] hover:text-[#1677FF]\">Change email address</a>\r\n            </p>\r\n\r\n            <div className=\"flex justify-center gap-3 sm:mb-2 mb-36\">\r\n              {Array.from({ length: 6 }).map((_, i) => (\r\n                <input\r\n                  key={i}\r\n                  type=\"text\"\r\n                  maxLength={1}\r\n                  inputMode=\"numeric\"\r\n                  className=\"border rounded-[8px] w-10 h-12 text-center text-lg focus:outline-none focus:border-[#1677FF]\"\r\n                  value={recoveryCode[i] || \"\"}\r\n                  onChange={(e) => {\r\n                    const val = e.target.value.replace(/\\D/, \"\"); // —Ç—ñ–ª—å–∫–∏ —Ü–∏—Ñ—Ä–∏\r\n                    const newCode = [...recoveryCode];\r\n                    newCode[i] = val;\r\n                    setRecoveryCode(newCode);\r\n\r\n                    // –∞–≤—Ç–æ—Ñ–æ–∫—É—Å –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π\r\n                    if (val && i < 5) {\r\n                      const nextInput = document.getElementById(`otp-${i + 1}`);\r\n                      nextInput?.focus();\r\n                    }\r\n                  }}\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === \"Backspace\" && !recoveryCode[i] && i > 0) {\r\n                      const prevInput = document.getElementById(`otp-${i - 1}`);\r\n                      prevInput?.focus();\r\n                    }\r\n                  }}\r\n                  id={`otp-${i}`}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            <button\r\n              onClick={nextStep}\r\n              className=\"mt-6 bg-[#1677FF] text-[#fff] rounded-lg py-2 px-4 w-full\">\r\n              Verify Code\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* --- Step 5: Success --- */}\r\n        {step === 5 && (\r\n          <div className=\"flex flex-col gap-4 text-center\">\r\n            <h2 className=\"text-2xl font-semibold text-green-600\">\r\n              Enter new password\r\n            </h2>\r\n\r\n            {/* –ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å */}\r\n            <div className=\"relative w-full\">\r\n              <input\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                placeholder=\"New Password\"\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                className=\"border rounded-[8px] px-[12px] py-[9px] h-[40px] w-full focus:outline-none border-[#D9D9D9]\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n                className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-500 hover:text-black\">\r\n                {showPassword ? <Eye size={16} /> : <EyeOff size={16} />}\r\n              </button>\r\n            </div>\r\n\r\n            {/* –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—è */}\r\n            <div className=\"relative w-full\">\r\n              <input\r\n                type={showConfirm ? \"text\" : \"password\"}\r\n                placeholder=\"Confirm Password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                className=\"border rounded-[8px] px-[12px] py-[9px] h-[40px] w-full focus:outline-none border-[#D9D9D9]\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowConfirm(!showConfirm)}\r\n                className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-500 hover:text-black\">\r\n                {showConfirm ? <Eye size={16} /> : <EyeOff size={16} />}\r\n              </button>\r\n            </div>\r\n\r\n            {/* –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É */}\r\n            {newPassword &&\r\n              confirmPassword &&\r\n              newPassword !== confirmPassword && (\r\n                <p className=\"text-sm text-dd\">Passwords do not match</p>\r\n              )}\r\n\r\n            <button\r\n              onClick={() => {\r\n                if (newPassword === confirmPassword && newPassword) {\r\n                  // —Ç—É—Ç –º–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏ submit –∞–±–æ nextStep\r\n                  alert(\"Password successfully reset!\");\r\n                }\r\n              }}\r\n              disabled={\r\n                !newPassword ||\r\n                !confirmPassword ||\r\n                newPassword !== confirmPassword\r\n              }\r\n              className=\"bg-[#1677FF] text-[#fff] rounded-lg py-2 px-4 w-full disabled:bg-gray-400 disabled:cursor-not-allowed\">\r\n              Save\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}